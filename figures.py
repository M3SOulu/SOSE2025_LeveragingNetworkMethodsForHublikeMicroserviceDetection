import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


def get_dist(df, col, max, num=100):
    xs = np.linspace(0.0, max, num=num)
    ys = [(df[col] >= threshold).sum() for threshold in xs]
    return xs, ys


def plot_centrality_dist(DB: bool):
    # metrics = metrics[metrics[f"Betweenness Centrality (DB={DB})"] > 0.0001]
    # metrics = metrics[metrics[f"Eigenvector Centrality (DB={DB})"] > 0.0001]
    metrics = pd.read_csv(f"metrics_centrality_db_{DB}.csv")
    norm_deg_dist = get_dist(metrics, f"Norm. Degree Centrality", 1.0)
    deg_dist = get_dist(metrics, f"Degree Centrality", metrics[f"Degree Centrality"].max())
    norm_in_deg_dist = get_dist(metrics, f"Norm. In-degree Centrality", 1.0)
    in_deg_dist = get_dist(metrics, f"In-degree Centrality", metrics[f"In-degree Centrality"].max())
    norm_out_deg_dist = get_dist(metrics, f"Norm. Out-degree Centrality", 1.0)
    out_deg_dist = get_dist(metrics, f"Out-degree Centrality", metrics[f"Out-degree Centrality"].max())
    bet_dist = get_dist(metrics, f"Betweenness Centrality", 1.0)
    closeness_dist = get_dist(metrics, f"Closeness Centrality", 1.0)
    eig_dist = get_dist(metrics, f"Eigenvector Centrality", 1.0)
    pagerank_dist = get_dist(metrics, f"PageRank Centrality", 1.0)
    hubs_dist = get_dist(metrics, f"Hub Score", 1.0)
    auth_dist = get_dist(metrics, f"Authority Score", 1.0)

    plt.figure(figsize=(14,12))
    plt.subplot(331)
    plt.plot(deg_dist[0], deg_dist[1], color='tab:orange')
    plt.xlabel("Threshold")
    plt.ylabel("Count(Centrality > Threshold)")
    plt.xticks([0,2,4,6,8,10,11],[0,2,4,6,8,10,11])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.title("Degree Centrality")
    plt.subplot(332)
    plt.plot(norm_deg_dist[0], norm_deg_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.title("Norm. Degree Centrality")
    plt.subplot(333)
    plt.plot(norm_deg_dist[0], norm_deg_dist[1])
    plt.plot(norm_deg_dist[0], deg_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 1.0], ["min", "max"])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.title("Overlaid Degree Centrality")
    plt.subplot(334)
    plt.plot(in_deg_dist[0], in_deg_dist[1], color='tab:orange')
    plt.xlabel("Threshold")
    plt.ylabel("Count(Centrality > Threshold)")
    plt.xticks([0,2,4,6,8,10,11],[0,2,4,6,8,10,11])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.title("In-degree Centrality")
    plt.subplot(335)
    plt.plot(norm_in_deg_dist[0], norm_in_deg_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.title("Norm. In-degree Centrality")
    plt.subplot(336)
    plt.plot(norm_in_deg_dist[0], norm_in_deg_dist[1])
    plt.plot(norm_in_deg_dist[0], in_deg_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 1.0], ["min", "max"])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.title("Overlaid In-degree Centrality")
    plt.subplot(337)
    plt.plot(out_deg_dist[0], out_deg_dist[1], color='tab:orange')
    plt.xlabel("Threshold")
    plt.ylabel("Count(Centrality > Threshold)")
    plt.xticks([0,2,4,6,8,10,11],[0,2,4,6,8,10,11])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.title("Out-degree Centrality")
    plt.subplot(338)
    plt.plot(norm_out_deg_dist[0], norm_out_deg_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.title("Norm. Out-degree Centrality")
    plt.subplot(339)
    plt.plot(norm_out_deg_dist[0], norm_out_deg_dist[1])
    plt.plot(norm_out_deg_dist[0], out_deg_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 1.0], ["min", "max"])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.title("Overlaid Out-degree Centrality")
    plt.suptitle(f"Comparison of Absolute and Normalized\n Cumulative Distributions of Degree centralities (DB={DB})\n")
    plt.tight_layout()
    plt.savefig(f"ComparisonDB={DB}.png")

    plt.figure(figsize=(10,10))
    plt.plot(norm_deg_dist[0], norm_deg_dist[1])
    plt.xlabel("Threshold")
    plt.ylabel("Count(Centrality > Threshold)")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.grid(linestyle=':')
    plt.title("Norm. Degree Centrality")
    plt.savefig(f"DegreeDB={DB}.png")

    plt.figure(figsize=(10,10))
    plt.plot(norm_in_deg_dist[0], norm_in_deg_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.grid(linestyle=':')
    plt.title("Norm. In-degree Centrality")
    plt.savefig(f"InDegreeDB={DB}.png")

    plt.figure(figsize=(10,10))
    plt.plot(norm_out_deg_dist[0], norm_out_deg_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.grid(linestyle=':')
    plt.title("Norm. Out-degree Centrality")
    plt.savefig(f"OutDegreeDB={DB}.png")

    plt.figure(figsize=(10,10))
    plt.plot(bet_dist[0], bet_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.grid(linestyle=':')
    plt.ylabel("Count(Centrality > Threshold)")
    plt.title("Betweenness Centrality")
    plt.savefig(f"BetweennessDB={DB}.png")

    plt.figure(figsize=(10,10))
    plt.plot(eig_dist[0], eig_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.grid(linestyle=':')
    plt.title("Eigenvector Centrality")
    plt.suptitle(f"Cumulative distributions of centrality metrics (DB={DB})")
    plt.tight_layout()
    plt.savefig(f"EigenvectorDB={DB}.png")

    plt.figure(figsize=(10,10))
    plt.plot(pagerank_dist[0], pagerank_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.grid(linestyle=':')
    plt.title("PageRank Centrality")
    plt.suptitle(f"Cumulative distributions of centrality metrics (DB={DB})")
    plt.tight_layout()
    plt.savefig(f"PageRankDB={DB}.png")

    plt.figure(figsize=(10,10))
    plt.plot(closeness_dist[0], closeness_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.grid(linestyle=':')
    plt.title("Closeness Centrality")
    plt.suptitle(f"Cumulative distributions of centrality metrics (DB={DB})")
    plt.tight_layout()
    plt.savefig(f"ClosenessDB={DB}.png")

    plt.figure(figsize=(10,10))
    plt.plot(hubs_dist[0], hubs_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.grid(linestyle=':')
    plt.title("Hub Score")
    plt.tight_layout()
    plt.savefig(f"HubDB={DB}.png")

    plt.figure(figsize=(10,10))
    plt.plot(auth_dist[0], auth_dist[1])
    plt.xlabel("Threshold")
    plt.xticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
    plt.yticks([0, 50, 100, 150, 200, 250], [0, 50, 100, 150, 200, 250])
    plt.grid(linestyle=':')
    plt.title("Authority Score")
    plt.tight_layout()
    plt.savefig(f"AuthDB={DB}.png")

plot_centrality_dist(DB=True)
plot_centrality_dist(DB=False)
